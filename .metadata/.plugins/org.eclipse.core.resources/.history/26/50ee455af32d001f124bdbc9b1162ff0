package com.centroinformacion.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.centroinformacion.entity.DataCatalogo;
import com.centroinformacion.entity.Departamento;
import com.centroinformacion.entity.Distrito;
import com.centroinformacion.entity.Provincia;
import com.centroinformacion.service.DataCatalogoService;
import com.centroinformacion.service.DepartamentoService;
import com.centroinformacion.service.DistritoService;
import com.centroinformacion.service.ProvinciaService;
import com.centroinformacion.util.AppSettings;
@Controller
public class UtilController {
	

	@Autowired
	private DataCatalogoService dataCatalogoService;
	
	 
	@Autowired
	private DepartamentoService departamentoService;
	
	@Autowired
	private ProvinciaService provinciaService;
	
	@Autowired
	private DistritoService distritoService;
	
	@GetMapping("/listaDistrito")
	@ResponseBody
	public List<Distrito> listarTodosLosDistritosXProvincia(@RequestParam("idProvincia") Optional<Integer> idProvincia) {
	    List<Distrito> distritos = distritoService.listarTodosLosDistritosXProvincia(idProvincia.orElse(0));

	    // Formatear los nombres de las provincias
	    distritos.forEach(distrito -> distrito.setNombre(distrito.getNombreFormateado()));

	    return distritos;
	}
	
	@GetMapping("/listaProvincia")
	@ResponseBody
	public List<Provincia> listaProvinciaXDepartamento(@RequestParam("idDepartamento") Optional<Integer> idDepartamento) {
	    List<Provincia> provincias = provinciaService.listarTodasLasPronvinciasXDepartamento(idDepartamento.orElse(0));

	    // Formatear los nombres de las provincias
	    provincias.forEach(provincia -> provincia.setNombre(provincia.getNombreFormateado()));

	    return provincias;
	}
	
	@GetMapping("/listaDepartamento")
	@ResponseBody
	public List<Departamento> listaDepartamento() {
		List<Departamento> departamentos = departamentoService.listarTodosDepartamentos();
		// Formatear los nombres de las provincias
	    departamentos.forEach(departamento -> departamento.setNombre(departamento.getNombreFormateado()));
		return departamentos;
	}
	

	@GetMapping("/listaCategoriaDeLibro")
	@ResponseBody
	public List<DataCatalogo> listaCategoriaDeLibro() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_01_CATEGORIA_DE_LIBRO);
	}
	
	@GetMapping("/listaTipoProveedor")
	@ResponseBody
	public List<DataCatalogo> listaTipoProveedor() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_02_TIPO_DE_PROVEEDOR);
	}
	
	@GetMapping("/listaModalidadAlumno")
	@ResponseBody
	public List<DataCatalogo> listaModalidadAlumno() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_03_MODALIDAD_DE_ALUMNO);
	}
	
	@GetMapping("/listaGradoAutor")
	@ResponseBody
	public List<DataCatalogo> listaGradoAutor() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_04_GRADO_DE_AUTOR);
	}	
	
	@GetMapping("/listaTipoLibroRevista")
	@ResponseBody
	public List<DataCatalogo> listaTipoLibroRevista() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_05_TIPO_DE_LIBRO_Y_REVISTA);
	}	
	
	@GetMapping("/listaTipoSala")
	@ResponseBody
	public List<DataCatalogo> listaTipoSala() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_06_TIPO_DE_SALA);
	}	
	
	@GetMapping("/listaSede")
	@ResponseBody
	public List<DataCatalogo> listaSede() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_07_SEDE);
	}	
	
	@GetMapping("/listaEstadoLibro")
	@ResponseBody
	public List<DataCatalogo> listaEstadoLibro() {
		return dataCatalogoService.listaDataCatalogo(AppSettings.CATALOGO_08_ESTADO_DE_LIBRO);
	}	
	
}
